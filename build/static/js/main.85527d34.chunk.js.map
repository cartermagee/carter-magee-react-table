{"version":3,"sources":["components/Head.js","components/SearchBar.js","style-utils/media.js","components/Editable.js","components/Table.js","style-utils/GlobalStyles.js","data/data.js","App.js","serviceWorker.js","index.js"],"names":["Header","styled","header","H1","h1","Head","title","sortInstructions","searchInstructions","editInstructions","SearchContainer","span","Input","input","SearchBar","searchTerm","handleChange","type","placeholder","value","onChange","sizes","giant","desktop","tablet","phone","media","Object","keys","reduce","accumulator","label","emSize","css","Cell","td","props","ford","InputContainer","div","Editable","text","property","edit","cellInfo","bold","initialState","useState","isEditing","setEditing","cellObj","setCellObj","escFunction","useCallback","e","keyCode","useEffect","document","addEventListener","removeEventListener","inputRef","useRef","current","focus","onBlur","ref","name","item","obj","target","prep","onClick","Table","table","TableHead","thead","TableBody","tbody","TableRow","tr","ArrowContainer","TableHeader","th","NoResults","tableRef","offsetWidth","GridContainer","TableComponent","searchResults","tableHeaders","onSortChange","sortDirections","tableData","handleEdit","map","i","key","length","id","headerIndex","role","aria-label","GlobalStyles","createGlobalStyle","data","manufacturer","model","Main","main","Boolean","window","location","hostname","match","ReactDOM","render","setTableHeaders","setTableData","setSortDirections","React","setSearchTerm","setSearchResults","useLayoutEffect","localStorage","getItem","console","log","tData","JSON","parse","hData","sortValueArray","Array","fill","toLowerCase","tHLength","tDLength","j","toString","includes","push","event","sort","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","compareValues","splice","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85527d34.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nexport const Header = styled.header`\n  display: grid;\n  justify-items: center;\n  margin: 0 auto;\n  border-radius: 7px;\n  padding: 1rem;\n  height: fit-content;\n`;\n\nexport const H1 = styled.h1`\n  white-space: nowrap;\n  font-size: 2.4rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-items: center;\n  grid-gap: 10px;\n  &::after,\n  ::before {\n    display: block;\n    content: \"\";\n    width: 100%;\n    height: 10px;\n    background: linear-gradient(to var(--direction, left), #fff, transparent);\n  }\n  &::after {\n    --direction: right;\n  }\n`;\n\nfunction Head({\n  title,\n  sortInstructions,\n  searchInstructions,\n  editInstructions\n}) {\n  return (\n    <Header>\n      <H1>{title}</H1>\n      <div>\n        instructions:\n        <h3>{sortInstructions}</h3>\n        <h3>{searchInstructions}</h3>\n        <h3>{editInstructions}</h3>\n      </div>\n    </Header>\n  );\n};\nexport default Head;\n\nHead.propTypes = {\n  title: PropTypes.string.isRequired,\n  sortInstructions: PropTypes.string.isRequired,\n  searchInstructions: PropTypes.string.isRequired,\n  editInstructions: PropTypes.string.isRequired\n};\n","import React from 'react'\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nexport const SearchContainer = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 2rem;\n  & > * {\n    height: 100%;\n    padding: 5px;\n    display: grid;\n    align-items: center;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 20rem;\n  border-radius: 7px;\n`;\n\nexport default function SearchBar({\n  searchTerm,\n  handleChange\n}) {\n  return (\n    <>\n      <SearchContainer>\n        <Input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={handleChange}\n        />\n      </SearchContainer>\n    </>\n  );\n}\n\nSearchBar.propTypes = {\n  searchTerm: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  searchResults: PropTypes.arrayOf(PropTypes.object)\n};\n","import { css } from \"styled-components\";\n\nconst sizes = {\n  giant: 1170,\n  desktop: 992,\n  tablet: 768,\n  phone: 376\n};\n\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  const emSize = sizes[label] / 18;\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)}\n    }\n  `;\n  return accumulator;\n}, {});\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nexport const Cell = styled.td`\n  height: 2rem;\n  text-transform: ${props => props.ford && \"uppercase\"};\n  &:hover {\n    background: #b3ffd3;\n    font-weight: bold;\n    border-radius: 5px;\n    filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  background: #b3ffd3;\n  border-radius: 7px;\n  border: none;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  `\n\n  export const InputContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow: visible;\n`;\n\nexport default function Editable({\n  text,\n  property,\n  edit,\n  cellInfo,\n  bold\n}) {\n\n  const initialState = cellInfo;\n  const [isEditing, setEditing] = useState(false);\n  const [cellObj, setCellObj] = useState(initialState);\n\n  const prep = e =>{\n    let obj = {...cellObj};\n    obj.item[property] = e.target.value;\n  setCellObj(obj);\n}\n\n  const escFunction = useCallback(\n    e => {\n      if (e.keyCode === 27 || e.keyCode === 9 || e.keyCode === 13) {\n        edit(cellInfo);\n        setEditing(false);\n      }\n    },\n    [cellInfo, edit]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, [escFunction]);\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    if (inputRef && inputRef.current && isEditing === true) {\n      inputRef.current.focus();\n    }\n  }, [isEditing, inputRef]);\n\n  return (\n    <Cell ford={property === \"model\"}>\n      {isEditing ? (\n        <InputContainer\n          onBlur={() => {\n            edit(cellInfo);\n            setEditing(false);\n          }}\n        >\n          <Input\n            ref={inputRef}\n            type=\"text\"\n            name=\"cellObj\"\n            placeholder={text}\n            value={cellObj.item.property}\n            onChange={e => prep(e, null)}\n          />\n        </InputContainer>\n      ) : (\n        <div onClick={() => setEditing(true)}>\n          {bold ? (\n            <span>\n              <b>{text}</b>\n            </span>\n          ) : (\n            <span>{text}</span>\n          )}\n        </div>\n      )}\n    </Cell>\n  );\n};\n\nEditable.propTypes = {\n  text: PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number\n]),\n  property: PropTypes.string.isRequired,\n  edit: PropTypes.func.isRequired,\n  cellInfo: PropTypes.object.isRequired,\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport { ArrowUpCircle, ArrowDownCircle } from \"react-feather\";\nimport { media } from \"../style-utils/media\";\nimport Editable from \"./Editable\";\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  background: #fff;\n  border-radius: 10px;\n  height: fit-content;\n  width: fit-content;\n  grid-column: 1 / -1;\n  grid-row: 1 / -1;\n  min-width: 50%;\n  color: #292929;\n  & thead,\n  tbody {\n    width: 100%;\n  }\n  ${media.tablet`\n    width: 100%;\n  `}\n`;\n\nexport const TableHead = styled.thead`\n  background: #36304b;\n  height: 3rem;\n  display: grid;\n  align-items: center;\n  font-size: 18px;\n  border-radius: 10px 10px 0 0;\n  & > tr {\n    height: 100%;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  max-height: 49vh;\n  display: block;\n  overflow: auto;\n  border-radius: 0 0 10px 10px;\n  & tr:nth-child(even) {\n    background-color: #f5f5f5;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  color: #808080;\n  width: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  line-height: 2;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  & > * {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const ArrowContainer = styled.div`\n  display: none;\n  padding-left: 5px;\n`;\n\nexport const TableHeader = styled.th`\n  cursor: pointer;\n  height: 100%;\n  color: #ccc;\n  &:hover {\n    color: #fff;\n    background: #8854c8;\n    border-radius: 7px;\n    filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));\n    ${ArrowContainer} {\n      display: block;\n    }\n  }\n`;\n\nexport const Cell = styled.td`\n  height: 2rem;\n  overflow: scroll;\n  text-transform: ${props => props.ford && \"uppercase\"};\n  &:hover {\n    background: #b3ffd3;\n    font-weight: bold;\n    border-radius: 5px;\n    filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));\n  }\n`;\nexport const NoResults = styled.div`\n  grid-column: 1 / -1;\n  grid-row: 1 / -1;\n  height: 100%;\n  z-index: 5;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(255, 0, 0, 0.4);\n  width: ${({ tableRef }) => tableRef.current.offsetWidth}px;\n  font-weight: bold;\n  font-size: 2rem;\n  & > * {\n    transform: rotate(27deg);\n    ${media.tablet`\n      transform: rotate(0deg);\n      font-size: 1.8rem;\n    `}\n  }\n`;\nexport const GridContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  width: 100%;\n  height: fit-content;\n`;\nexport default function TableComponent({\n  searchTerm,\n  searchResults,\n  tableHeaders,\n  onSortChange,\n  sortDirections,\n  tableData,\n  handleEdit\n}) {\n  const tableRef = useRef();\n  return (\n    <GridContainer>\n      <Table ref={tableRef}>\n        <TableHead>\n          <TableRow>\n            {tableHeaders.map((header, i) => (\n              <TableHeader key={header} onClick={() => onSortChange(i)}>\n                {header}\n                <ArrowContainer>\n                  {!sortDirections[i] ? <ArrowDownCircle /> : <ArrowUpCircle />}\n                </ArrowContainer>\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(searchResults.length > 0 ? searchResults : tableData).map(\n            (item, i) => (\n              <TableRow key={item.id}>\n                {Object.keys(item).map((key, headerIndex) => (\n                  <Editable\n                    ford={key === \"model\" ? 1 : 0}\n                    key={tableHeaders[headerIndex] + item[key]}\n                    cellInfo={{ item, i }}\n                    text={item[key]}\n                    property={key}\n                    edit={handleEdit}\n                    bold={item[key] === \"Ford\"}\n                    // bold={item.manufacturer === \"Ford\"} //uncomment this line and comment out line above for whole row bold\n                  />\n                ))}\n              </TableRow>\n            )\n          )}\n        </TableBody>\n      </Table>\n      {searchTerm && searchResults.length === 0 && (\n        <NoResults tableRef={tableRef}>\n          <h1>\n            Ope! No Results <span role=\"img\" aria-label=\"emoji\">😬</span>\n          </h1>\n        </NoResults>\n      )}\n    </GridContainer>\n  );\n}\n\nTableComponent.propTypes={\n  searchResults: PropTypes.arrayOf(PropTypes.object),\n  tableHeaders: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSortChange: PropTypes.func.isRequired,\n  sortDirections: PropTypes.arrayOf(PropTypes.bool).isRequired,\n  tableData: PropTypes.arrayOf(PropTypes.object.isRequired),\n  handleEdit: PropTypes.func.isRequired\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    background: #c850c0;\n    background: linear-gradient(45deg, #4158d0, #c850c0);\n    color: #fff;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  input:focus{\n    outline: none;\n  }\n`;\n\nexport default GlobalStyles\n","export const data = [\n  {\n    id: 1,\n    manufacturer: \"Ford\",\n    model: \"Focus\"\n  },\n  {\n    id: 2,\n    manufacturer: \"Ford\",\n    model: \"Mustang\"\n  },\n  {\n    id: 3,\n    manufacturer: \"Ford\",\n    model: \"F-150\"\n  },\n  {\n    id: 4,\n    manufacturer: \"Chevrolet\",\n    model: \"Corvette\"\n  },\n  {\n    id: 5,\n    manufacturer: \"Chevrolet\",\n    model: \"Equinox\"\n  },\n  {\n    id: 6,\n    manufacturer: \"Tesla\",\n    model: \"Model 3\"\n  },\n  {\n    id: 7,\n    manufacturer: \"Toyota\",\n    model: \"Camry\"\n  },\n  {\n    id: 8,\n    manufacturer: \"Dodge\",\n    model: \"Charger\"\n  },\n  {\n    id: 9,\n    manufacturer: \"Dodge\",\n    model: \"Challenger\"\n  }\n];\n","import React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Head from \"./components/Head\";\nimport SearchBar from \"./components/SearchBar\";\nimport TableComponent from \"./components/Table\";\nimport GlobalStyles from \"./style-utils/GlobalStyles\";\nimport { data } from \"./data/data\";\nimport { media } from \"./style-utils/media\";\n\nconst Main = styled.main`\n  display: grid;\n  height: 100vh;\n  padding: 0;\n  justify-items: center;\n  grid-template-rows: auto auto 1fr auto;\n  width: 100%;\n  & > * {\n    filter: drop-shadow(0px 5px 3px rgba(0, 0, 0, 0.5));\n  }\n  ${media.tablet`\n    grid-template-rows: 2fr 1fr 3fr;\n  `}\n`;\n\nexport default function App() {\n  const [tableHeaders, setTableHeaders] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [sortDirections, setSortDirections] = useState([]);\n\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  useLayoutEffect(() => {\n    if (window.localStorage.getItem(\"data\")) {\n      console.log(\"getting saved data from local storage\");\n\n      const item = window.localStorage.getItem(\"data\");\n      const tData = JSON.parse(item);\n\n      const hData = Object.keys(tData[0]);\n      console.log(hData);\n      setTableData(tData);\n      setTableHeaders(hData);\n    } else if (false) {\n      // Change to true if you're hitting some endpoint for different data BUT the shape of the data has to be an array of objects who's properties' values have to all be strings\n      const fetchData = async () => {\n        const API_URL = \"http://jsonplaceholder.typicode.com\"; // example for testing\n        console.log(`fetching data from ${API_URL}`);\n        await axios\n          .get(`${API_URL}/posts?_start=10&_limit=30`)\n          .then(response => {\n            setTableHeaders(Object.keys(response.data[0]));\n            setTableData(response.data);\n          })\n          .catch(error => {\n            console.error({ error });\n            setTableData(data);\n          });\n      };\n      fetchData();\n    } else {\n      console.log(\"using default data\");\n      const hData = Object.keys(data[0]);\n      setTableHeaders(hData);\n      setTableData(data);\n    }\n\n    const sortValueArray = new Array(tableHeaders.length).fill(true);\n    setSortDirections(sortValueArray);\n  }, [setTableHeaders, setTableData, setSortDirections, tableHeaders.length]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      searchTerm.toLowerCase();\n      let data = [];\n      const tHLength = tableHeaders.length;\n      const tDLength = tableData.length;\n      for (let i = 0; i < tDLength; i++) {\n        const obj = tableData[i];\n        for (let j = 0; j < tHLength; j++) {\n          const key = tableHeaders[j];\n          if (\n            obj[key]\n              .toString()\n              .toLowerCase()\n              .includes(searchTerm)\n          ) {\n            data.push(obj);\n            break;\n          } else {\n            continue;\n          }\n        }\n      }\n      setSearchResults(data);\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchTerm, tableData, tableHeaders]);\n\n\n  function compareValues(key, order) {\n    return function innerSort(a, b) {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        return 0;\n      }\n\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n\n      let comparison = 0;\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n      return order === false ? comparison * -1 : comparison;\n    };\n  }\n\n  const onSortChange = i => {\n    const key = tableHeaders[i];\n    let sort = sortDirections[i];\n    const data = [...tableData].sort(compareValues(key, sort));\n    setTableData(data);\n    let sortValueArray = [...sortDirections];\n    sortValueArray.splice(i, 1, !sort);\n    setSortDirections(sortValueArray);\n  };\n\n  const handleEdit = (obj) => {\n    let data = [...tableData];\n    data[obj.i] = obj.item;\n    setTableData(data);\n  }\n\n  return (\n    <Main>\n      <GlobalStyles />\n      <Head\n        title=\"Carter's ReactJs Table\"\n        sortInstructions=\"Click on each table header to sort\"\n        searchInstructions=\"Enter your search terms in the search input\"\n        editInstructions=\"click the text in the cells to edit inline\"\n      />\n      <SearchBar\n        searchTerm={searchTerm}\n        handleChange={handleChange}\n        searchResults={searchResults}\n      />\n      <TableComponent\n        searchTerm={searchTerm}\n        searchResults={searchResults}\n        tableHeaders={tableHeaders}\n        onSortChange={onSortChange}\n        sortDirections={sortDirections}\n        tableData={tableData}\n        handleEdit={handleEdit}\n      />\n    </Main>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}